<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <description>apache shiro配置</description>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--shiro 的核心安全接口  -->
        <property name="securityManager" ref="securityManager"/>

        <!-- 设置默认的首页 - 要求登录时的链接 - 没有认证通过的时候，通过此页面进行认证  -->
        <property name="loginUrl" value="/rest/login"/>

        <!--登录成功后要跳转的链接  -->
        <property name="successUrl" value="/rest/main"/>

        <!--未授权时要跳转的链接 - 指定拒绝访问页面  -->
        <property name="unauthorizedUrl" value="/rest/401"/>

        <!--shiro 链接约束配置 - 内置的过滤器的选用配置  -->
        <property name="filterChainDefinitions">
            <value>
                <!--
                anon 允许匿名访问
                authc 认证
                perms 授权
                -->
                <!-- /** 一般放最下面 -->
                <!-- 静态资源允许访问 图片、JS、css等资源设置为匿名访问-->
                /assets/** = anon
                <!-- 登录页允许访问 -->
                /rest/login = anon
                /rest/loginByAjax = anon
                /rest/401 = anon
                /rest/404 = anon
                /rest/500 = anon

                <!-- APP登录页允许访问-20171215新增 -->
                /app/** = anon


                <!-- 其他资源需要认证 authc  -->
                /** = authc

                <!-- 已经登录并且有授权admin:manage才可以访问 -->
                <!--  /system=roles[admin:manage] -->
            </value>
        </property>
    </bean>


    <!-- 会话DAO  通过sessionDao来管理session数据-->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>


    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="securityRealm"/>
            </list>
        </property>

        <!-- cacheManager,集合spring缓存工厂  缓存管理器，主要对session和授权数据进行缓存-->
        <property name="cacheManager" ref="shiroEhcacheManager" />
        <!-- <property name="sessionManager" ref="sessionManager" /> -->
    </bean>


    <!-- MD5加密算法的凭证匹配器  散列算法-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>


    <!-- Shiro生命周期处理器 -->
    <!-- <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> -->
</beans>